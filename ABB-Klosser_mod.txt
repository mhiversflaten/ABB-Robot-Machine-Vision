MODULE Module1
    VAR num WPW:=0;  ! What Python Wants
    VAR num WRD:=0;  ! What RAPID Does
    VAR bool ready_flag:= FALSE;  ! RAPID's ready flag
    VAR bool image_processed:= FALSE;  ! Python's ready flag
    CONST num gripHeight:= 10;
    CONST num safeHeight:= 60;  ! Close-up image height
    VAR num gripper_camera_offset{2};  ! Offsets for close-up image
    VAR num gripper_angle:= 0;  ! Gripper orientation for close-up image and picking
    VAR speeddata vSpeed:= v1000;  ! Speeddata generally used throughout the module
    VAR zonedata zZone:= fine;  ! Zonedata generally used throughout the module
    
    VAR num length;  ! Used to determine number of loops in stack pucks (WPW=2)

    ! Where the selected puck is located
    VAR robtarget puck_target := [[0,0,200],[0,1,0,0],[-1,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];

    VAR robtarget put_puck_target;  ! Target used to place puck
    VAR num puck_angle;  ! Angle puck should be rotated

    CONST robtarget middleOfTable:=[[0,0,0],[0,1,0,0],[-1,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];

    ! Overview image position
    VAR robtarget overview:=[[0,0,60],[0,1,0,0],[-1,0,0,0],[9E+09,9E+09,9E+09,9E+09,9E+09,9E+09]];

    TASK PERS wobjdata wobjTableN:=[FALSE,TRUE,"",[[150,-500,8],[0.707106781,0,0,-0.707106781]],[[0,0,0],[1,0,0,0]]];
    PERS tooldata tGripper:=[TRUE,[[0,0,114.25],[0,0,0,1]],[1,[-0.095984607,0.082520613,38.69176324],[1,0,0,0],0,0,0]];
        
    
    PROC main()
        AccSet 100, 50 \FinePointRamp:=30;
        closeGripper(FALSE);
        MoveJ overview,vSpeed,z50,tGripper\WObj:=wobjTableN;

        ready_flag:=TRUE;
        
        WHILE TRUE DO        
            
            IF WPW <> 0 THEN
                WRD:=WPW;
                WPW:=0;
            
                TEST WRD
                    CASE 1:
                    ! Move a chosen puck
                    MoveJ overview,vSpeed,fine,tGripper\WObj:=wobjTableN;
                    ready_flag:=TRUE;
                    
                    wait_for_python;
                    
                    puck_target.rot := OrientZYX(gripper_angle, 0, 180);
                    MoveJ Offs(puck_target, -gripper_camera_offset{1}, -gripper_camera_offset{2}, safeHeight),vSpeed,fine,tGripper\WObj:=wobjTableN;
                    ready_flag:=TRUE;
                    
                    wait_for_python;
                    puck_target.rot := OrientZYX(gripper_angle, 0, 180);
                    MoveJ Offs(puck_target, -gripper_camera_offset{1}, -gripper_camera_offset{2}, safeHeight),vSpeed,z10,tGripper\WObj:=wobjTableN;
                    getPuckSmoothly puck_target;
                    
                    putPuckSmoothly put_puck_target, puck_angle;

                    CASE 2:
                    ! Stack pucks
                    MoveJ overview,vSpeed,fine,tGripper\WObj:=wobjTableN;
                    ready_flag:=TRUE;
                    
                    wait_for_python;
                    
                    FOR i FROM 0 TO length-1 DO
                        
                        wait_for_python;
                        ! Move to close-up image position. gripper_camera_offset ensures that the camera is perfectly above the subject.
                        puck_target.rot := OrientZYX(gripper_angle, 0, 180);
                        MoveJ Offs(puck_target, -gripper_camera_offset{1}, -gripper_camera_offset{2}, safeHeight),vSpeed,fine,tGripper\WObj:=wobjTableN;
                        ready_flag:=TRUE;

                        wait_for_python;

                        puck_target.rot := OrientZYX(gripper_angle, 0, 180);
                        getPuckSmoothly puck_target;

                        MoveL Offs(puck_target, 0, 0, i*30 + gripHeight + 30),vSpeed,z5,tGripper\WObj:=wobjTableN;

                        putPuckSmoothly Offs(middleOfTable, 0, 150, i*30), puck_angle;

                        ready_flag:=TRUE;

                    ENDFOR

                    CASE 3:
                    ! Repeatability test
                    MoveJ overview,vSpeed,fine,tGripper\WObj:=wobjTableN;
                    ready_flag:=TRUE;
                    
                    wait_for_python;
                    
                    ! Move to close-up image position. gripper_camera_offset ensures that the camera is perfectly above the subject.
                    puck_target.rot := OrientZYX(140, 0, 180);
                    MoveJ Offs(puck_target, -gripper_camera_offset{1}, -gripper_camera_offset{2}, safeHeight),vSpeed,fine,tGripper\WObj:=wobjTableN;
                    ready_flag:=TRUE;
                    
                    wait_for_python;

                    getPuckSmoothly puck_target;
                    
                    putPuckSmoothly put_puck_target, puck_angle;
                    
                ENDTEST
            ENDIF
            WRD:=0;
            
            
        ENDWHILE 
        
    ENDPROC


    PROC wait_for_python()
        ! wait for python to finish processing image
        WHILE NOT image_processed DO
        ENDWHILE
        image_processed:=FALSE;
    ENDPROC
    
    
    ! Pick up puck
    PROC getPuckSmoothly(robtarget puck_position)

        MoveL Offs(puck_position, -gripper_camera_offset{1}, -gripper_camera_offset{2}, gripHeight),vSpeed,z50,tGripper\WObj:=wobjTableN;
	    MoveL Offs(puck_position, 0, 0, gripHeight),v400,fine,tGripper\WObj:=wobjTableN;
        closeGripper(TRUE);
        MoveL Offs(puck_position, 0, 0, gripHeight + 30),vSpeed,z5,tGripper\WObj:=wobjTableN;
        
    ENDPROC

    
    ! Place puck
    PROC putPuckSmoothly(robtarget toTarget, num angle)
        
        toTarget.rot := OrientZYX(-angle, 0, 180);
        MoveJ Offs(toTarget, 0, 0, gripHeight + 30),vSpeed,z10,tGripper\WObj:=wobjTableN;
        MoveJ Offs(toTarget, 0, 0, gripHeight + 10),vSpeed,z10,tGripper\WObj:=wobjTableN;
        MoveL Offs(toTarget, 0, 0, gripHeight),v200,fine,tGripper\WObj:=wobjTableN;
        closeGripper(FALSE);        
	    MoveJ Offs(toTarget, 0, 0, safeHeight),vSpeed,z5,tGripper\WObj:=wobjTableN;
        
    ENDPROC
    

    PROC closeGripper(bool state)
        WaitTime 0.1;
        IF state=TRUE THEN
          setDO PneumaticGripper, 1;  
        ELSEIF state=FALSE THEN
          setDO PneumaticGripper, 0;  
        ENDIF
        WaitTime 0.2;
    ENDPROC
    
ENDMODULE